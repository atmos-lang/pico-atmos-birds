^["@/pico/pico.ceu"]

pico-state-set-title("Birds - 06 (pool/scope)")
pico-state-set-size([640,480])
pico-state-set-size-pixel([1,1])
pico-state-set-grid(false)
pico-state-set-color-clear([0,0,0,255])
pico-state-set-color-draw([255,255,255,255])

val WIN :XY = pico-state-get-size()

task Bird (y,speed) {
    var xx = (-WIN.x) / 2
    var yy = y
    var sin = 0
    awaiting xx > (WIN.x/2) {
        par {
            every :Pico.Frame {
                val v = evt.ms * speed
                set xx = xx + (v/1000)
                set yy = y + ((speed/5) * `:number sin($sin.Number)`)
                set sin = sin + ((3.14*v)/100000)
            }
        } with {
            every :Pico.Draw {
                if (`:number ((int)(($sin.Number+(3.14/2))/3.14))` % 2) == 0 {
                    pico-output-draw-image([xx,yy], "res/clumsy_up.png");
                } else {
                    pico-output-draw-image([xx,yy], "res/clumsy_dn.png");
                }
            }
        }
    }
}

spawn {
    loop {
        awaiting :Pico.Mouse.Button.Dn {
            var birds = tasks(5)
            every 500:ms {
                (spawn in birds, Bird(y,s)) where {
                    val y = -(WIN.y/2) + (`:number rand()` % WIN.y)
                    val s = 100 + (`:number rand()` % 100)
                }
            }
        }
    }
}

pico-loop ()
